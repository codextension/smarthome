kind: Deployment
apiVersion: apps/v1
metadata:
  name: smart-home-spark
  namespace: smart-home
  labels:
    k8s-app: smart-home-spark
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: smart-home-spark
  template:
    metadata:
      name: smart-home-spark
      labels:
        k8s-app: smart-home-spark
    spec:
      containers:
        - name: smart-home-spark
          image: 'localhost:5000/smarthome-spark:0.8'
          resources:
              limits:
                memory: 4096Mi
                cpu: 2
          securityContext:
            privileged: false
          env:
          - name: CX_KAFKA_URL
            value: "192.168.178.63:9092"
          - name: CX_DB_NAME
            valueFrom:
              secretKeyRef:
                name: db-access
                key: schema
          - name: CX_DB_USER
            valueFrom:
              secretKeyRef:
                name: db-access
                key: schema_user
          - name: CX_DB_PWD
            valueFrom:
              secretKeyRef:
                name: db-access
                key: schema_pwd
          # envFrom:
          #   - configMapRef:
          #       name: smarthome-config
      initContainers:
        - name: init-spark
          image: busybox
          command: ['sh', '-c', 'until nslookup smart-home-db; do echo waiting for smart-home-db; sleep 2; done;']
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: Service
apiVersion: v1
metadata:
  name: smart-home-spark
  namespace: smart-home
  labels:
    k8s-app: smart-home-spark
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 4040
      targetPort: 4040
  selector:
    k8s-app: smart-home-spark